"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
''' 1 ) Расчет сложности функции min_val_list(mylist) 
 O(1)+O(n)*O(1)+O(1)+O(1)
 = O(1 + O(n * 1) + 1 + 1)
 = O(1 + n +1 +1)
 = O(n)
 Вывод самая большая сложность это O(n) сложность всей функции O(n) - Линейная
 
 2) Расчет сложности функции min_val_list_v2(mylist)
 Сложность метода min(lst) по таблице O(n) 
 Вывод сложность все функции O(n) - Линейная
 
 '''

import random


def min_val_list(mylist):
    min_value = mylist[0]  # O(1)
    for i in range(len(mylist)):  # O(n)
        if min_value > mylist[i]:  # O(1)
            min_value = mylist[i]  # O(1)
    return min_value  # O(1)


def min_val_list_v2(mylist):
    return min(mylist)  # O(n)


if __name__ == '__main__':
    mylist = random.sample(range(0, 1000), 100)
    print(f'Исходный список {mylist}')
    print(f'Минимальное значение списка = {min_val_list(mylist)}')
    print(f'Минимальное значение списка вариант 2 = {min_val_list_v2(mylist)}')
